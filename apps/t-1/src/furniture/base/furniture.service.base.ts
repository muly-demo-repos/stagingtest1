/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Furniture as PrismaFurniture } from "@prisma/client";

export class FurnitureServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FurnitureCountArgs, "select">
  ): Promise<number> {
    return this.prisma.furniture.count(args);
  }

  async furnitures<T extends Prisma.FurnitureFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FurnitureFindManyArgs>
  ): Promise<PrismaFurniture[]> {
    return this.prisma.furniture.findMany<Prisma.FurnitureFindManyArgs>(args);
  }
  async furniture<T extends Prisma.FurnitureFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FurnitureFindUniqueArgs>
  ): Promise<PrismaFurniture | null> {
    return this.prisma.furniture.findUnique(args);
  }
  async createFurniture<T extends Prisma.FurnitureCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FurnitureCreateArgs>
  ): Promise<PrismaFurniture> {
    return this.prisma.furniture.create<T>(args);
  }
  async updateFurniture<T extends Prisma.FurnitureUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FurnitureUpdateArgs>
  ): Promise<PrismaFurniture> {
    return this.prisma.furniture.update<T>(args);
  }
  async deleteFurniture<T extends Prisma.FurnitureDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FurnitureDeleteArgs>
  ): Promise<PrismaFurniture> {
    return this.prisma.furniture.delete(args);
  }
}
